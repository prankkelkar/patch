--- release_ORIG	2019-02-18 07:29:57.885027031 -0500
+++ release	2019-02-18 07:38:10.294083887 -0500
@@ -9,53 +9,29 @@
 
 REMOTE_REGEX = %r{gitlab.com.gitlab-org/gitaly-proto.git}
 
-# Sanity check
-%w[
-  git@gitlab.com:gitlab-org/gitaly-proto.git
-  https://gitlab.com/gitlab-org/gitaly-proto.git
-  https://janedoe@gitlab.com/gitlab-org/gitaly-proto.git
-].each do |remote|
-  abort "regex check failed failed for #{remote.inspect}" unless REMOTE_REGEX.match(remote)
-end
 
 def main(version)
-  remote = capture!(%w[git remote get-url --push origin])
-  unless REMOTE_REGEX.match(remote)
-    abort "Git remote 'origin' must match #{REMOTE_REGEX}, got #{remote.inspect}"
-  end
 
   unless version =~ /^[0-9]/
     abort "Version string #{version.inspect} does not look like a semver (e.g. \"1.0.2\"). Aborting."
   end
 
   run!(%w[make generate])
-  puts 'Testing for changed files'
-  run!(%w[git diff --quiet --exit-code])
-  puts 'Testing for staged changes'
-  run!(%w[git diff --quiet --cached --exit-code])
   write_version_files(version)
   version_msg = "Version #{version}"
-  run!(%W[git commit -m #{version_msg}])
   tag_name = "v#{version}"
-  run!(%W[git tag -a -m #{version_msg} #{tag_name}])
-  run!(%W[git show --pretty #{tag_name}])
   run!(%W[gem build #{GEM_NAME}.gemspec])
   puts "Proceed to publish version #{version}? Enter 'Yes' to continue; Ctrl-C to abort"
   $stdout.flush
   abort unless $stdin.gets.chomp == 'Yes'
-
-  run!(%W[git push origin HEAD #{tag_name}])
-  run!(%W[gem push #{GEM_NAME}-#{version}.gem])
 end
 
 def write_version_files(version)
   version_file = 'VERSION'
   open(version_file, 'w') { |f| f.puts version }
-  run!(%W[git add #{version_file}])
 
   go_version_file = 'go/VERSION'
   open(go_version_file, 'w') { |f| f.puts version }
-  run!(%W[git add #{go_version_file}])
 
   version_rb_template = ERB.new <<EOT
 # This file was auto-generated by #{$0}
@@ -65,7 +41,6 @@
 EOT
   version_rb = File.join(RUBY_PREFIX, RUBY_VERSION_FILE)
   open(version_rb, 'w') { |f| f.write(version_rb_template.result) }
-  run!(%W[git add #{version_rb}])
 end
 
 def error(msg)
